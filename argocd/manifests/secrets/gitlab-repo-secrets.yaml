# gitlab-repo-externalsecret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-repo-credentials
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  
  target:
    name: gitlab-repo-https
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
        annotations:
          managed-by: external-secrets-operator
      type: Opaque
      data:
        type: git
        url: "{{ .url }}"
        username: "{{ .username }}"
        password: "{{ .token }}"
        project: argocd
        insecure: "false"
        enableLfs: "true"
  
  data:
  - secretKey: url
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: url
  - secretKey: username
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: username
  - secretKey: token
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: token

---
# SSH-based repository access
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-repo-ssh
  namespace: argocd
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  
  target:
    name: gitlab-repo-ssh
    creationPolicy: Owner
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      data:
        type: git
        url: "git@gitlab.company.com:k8s/manifests.git"
        sshPrivateKey: |
{{ .private_key | indent 10 }}
        insecure: "false"
        project: argocd
  
  data:
  - secretKey: private_key
    remoteRef:
      key: production/argocd/gitlab/ssh
      property: private_key

---
# Helm repository credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-helm-repo
  namespace: argocd
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  
  target:
    name: gitlab-helm-repo
    creationPolicy: Owner
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      data:
        type: helm
        url: "https://gitlab.company.com/api/v4/projects/123/packages/helm/stable"
        username: "{{ .username }}"
        password: "{{ .token }}"
        enableOCI: "true"
  
  data:
  - secretKey: username
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: username
  - secretKey: token
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: token
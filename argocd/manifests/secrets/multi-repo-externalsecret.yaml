# multi-repo-externalsecret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: multiple-repos
  namespace: argocd
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  
  target:
    name: private-repos-list
    creationPolicy: Owner
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
      type: Opaque
      data:
        # GitHub Enterprise
        github-enterprise: |
          type: git
          url: https://github.company.com/k8s/applications
          username: {{ .github_username }}
          password: {{ .github_token }}
        
        # GitLab Self-Hosted
        gitlab-selfhosted: |
          type: git
          url: https://gitlab.internal.com/devops/charts
          username: {{ .gitlab_username }}  
          password: {{ .gitlab_token }}
        
        # Private Helm Registry
        private-helm: |
          type: helm
          url: https://charts.company.com
          username: {{ .helm_username }}
          password: {{ .helm_token }}
          
        # OCI Registry
        oci-registry: |
          type: helm
          url: oci://registry.company.com/helm-charts
          username: {{ .oci_username }}
          password: {{ .oci_token }}
          enableOCI: true
  
  data:
  - secretKey: github_username
    remoteRef:
      key: production/argocd/github/credentials
      property: username
  - secretKey: github_token
    remoteRef:
      key: production/argocd/github/credentials
      property: token
  - secretKey: gitlab_username
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: username
  - secretKey: gitlab_token
    remoteRef:
      key: production/argocd/gitlab/credentials
      property: token
  - secretKey: helm_username
    remoteRef:
      key: production/argocd/helm/credentials
      property: username
  - secretKey: helm_token
    remoteRef:
      key: production/argocd/helm/credentials
      property: token
  - secretKey: oci_username
    remoteRef:
      key: production/argocd/oci/credentials
      property: username
  - secretKey: oci_token
    remoteRef:
      key: production/argocd/oci/credentials
      property: token